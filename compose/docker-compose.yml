version: "3.2"
services:
  fe:
    image: ccr.ccs.tencentyun.com/jiezi19971225/ahpuoj-fe:latest
    container_name: ahpuojv2_fe
    restart: always
    ports:
      - 80:80
    volumes:
      - oj-upload-volume:/usr/share/nginx/ahpuoj/upload:ro
  backend:
    image: ccr.ccs.tencentyun.com/jiezi19971225/ahpuoj-backend:latest
    container_name: ahpuojv2_backend
    restart: always
    ports:
      - 8080:8080
    volumes:
      - ./backend_config.ini:/home/backend/config/config.ini:ro
      - oj-problemdata-volume:/var/oj/problemdata:cached
      - oj-upload-volume:/var/oj/upload:cached
    depends_on:
      - db
      - db-slave
      - redis
      - rabbitmq
  judger:
    image: ccr.ccs.tencentyun.com/jiezi19971225/ahpuoj-judger:latest
    container_name: ahpuojv2_judger
    restart: always
    tty: true
    volumes:
      - ./scheduler_config.ini:/home/judge/scheduler/config.ini:ro
      - oj-problemdata-volume:/home/judge/hustoj_core/data:ro
    depends_on:
      - db
      - db-slave
      - redis
      - rabbitmq
    privileged: true
  db:
    image: mysql:latest
    container_name: ahpuojv2_mysql
    restart: always
    ports:
      - "33306:3306"
    volumes:
      - ./mysql_master_data:/var/lib/mysql
      - ../sql/oj.sql:/docker-entrypoint-initdb.d/oj.sql
      - ../sql/ojdata.sql:/docker-entrypoint-initdb.d/ojdata.sql
      - ../sql/casbin.sql:/docker-entrypoint-initdb.d/casbin.sql
      - ./init_master.sh:/docker-entrypoint-initdb.d/init_master.sh
      - "./master_my.cnf:/etc/mysql/my.cnf"
      - "./master_mysql-files:/var/lib/mysql-files"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_REPLICATION_USER: ${MYSQL_REPLICATION_USER}
      MYSQL_REPLICATION_PASSWORD: ${MYSQL_REPLICATION_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: Asia/Shanghai
  db-slave:
    image: mysql:latest
    container_name: ahpuojv2_mysql_slave
    restart: always
    ports:
      - "33307:3306"
    volumes:
      - ./mysql_slave_data:/var/lib/mysql
      - ../sql/oj.sql:/docker-entrypoint-initdb.d/oj.sql
      - ../sql/ojdata.sql:/docker-entrypoint-initdb.d/ojdata.sql
      - ../sql/casbin.sql:/docker-entrypoint-initdb.d/casbin.sql
      - ./init_slave.sh:/docker-entrypoint-initdb.d/init_slave.sh
      - "./slave_my.cnf:/etc/mysql/my.cnf"
      - "./slave_mysql-files:/var/lib/mysql-files"
    depends_on:
      - db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_REPLICATION_USER: ${MYSQL_REPLICATION_USER}
      MYSQL_REPLICATION_PASSWORD: ${MYSQL_REPLICATION_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: Asia/Shanghai
  redis:
    image: redis:latest
    container_name: ahpuojv2_redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
  rabbitmq:
    image: rabbitmq:management
    container_name: ahpuojv2_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST:
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
volumes:
  oj-problemdata-volume:
  oj-upload-volume:
